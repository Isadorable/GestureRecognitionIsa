//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice Ã¨ stato generato da uno strumento.
//     Versione runtime:4.0.30319.34014
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using Windows.Kinect;
namespace AssemblyCSharp
{
	public struct Vector4Util 
	{

		public static float Length (Vector4 v)
		{
            float x = v.X;
            float y = v.Y;
            float z = v.Z;
            float w = 0.0f;
			return (float)System.Math.Sqrt(x * x + y * y + z * z + w * w);
		}
		
		/// <summary>
		/// Scales the Vector4 to unit length.
		/// </summary>
		public static Vector4 Normalize(Vector4 v)
		{
			float scale = 1.0f / Length(v);
			v.X *= scale;
			v.Y *= scale;
			v.Z *= scale;
			v.W *= scale;
			return v;
		}
		
		/// <summary>
		/// Calculate the dot product of two vectors
		/// </summary>
		/// <param name="left">First operand</param>
		/// <param name="right">Second operand</param>
		/// <returns>The dot product of the two inputs</returns>
		public static float Dot(Vector4 left, Vector4 right)
		{
			return left.X * right.X + left.Y * right.Y + left.Z * right.Z + left.W * right.W;
		}

        /// <summary>
        /// Add two Vectors
        /// </summary>
        /// <param name="a">First operand</param>
        /// <param name="b">Second operand</param>
        /// <returns>Result of addition</returns>
        public static Vector4 Add(Vector4 a, Vector4 b)
        {
            Vector4 v4 = new Vector4();
            v4.X = a.X + b.X;
            v4.Y = a.Y + b.Y;
            v4.Z = a.Z + b.Z;
            v4.W = a.W + b.W;
            return v4;
        }
	}

}

